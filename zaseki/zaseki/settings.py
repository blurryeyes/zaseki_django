"""
Django settings for zaseki project.

Generated by 'django-admin startproject' using Django 3.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-pasn-nihea_agkb-$&q3nr^sy=u4*5#7z80t4ryw&iowwm=1!o'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# ALLOWED_HOSTS = []
ALLOWED_HOSTS = ['192.168.33.10', '192.168.0.6']

# SQL logging
# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'handlers': {
#         'console': {
#             'level': 'DEBUG',
#             'class': 'logging.StreamHandler',
#         },
#     },
#     'loggers': {
#         'django.db.backends': {
#             'handlers': ['console'],
#             'level': 'DEBUG',
#         },
#     },
# }

# ログファイルにいろいろ出力
# LOGGING = {
#     # https://marsquai.com/745ca65e-e38b-4a8e-8d59-55421be50f7e/05f253f8-c11b-4c91-8091-989eb2600a7b/b2deae90-5afc-4bcf-9159-722dfd1aadec/
#     # https://qiita.com/thim/items/4fe17c427e6f917248f4
#     'version': 1,
#     'disable_existing_loggers': False,
#     'formatters':{
#         'standard':{
#             'format' : "standard_log [%(asctime)s] %(levelname)s [%(name)s:%(lineno)s] %(message)s",
#             'datefmt' : "%d/%b/%Y %H:%M:%S"
#         },
#     },
#     'handlers': {
#         'info-file': {   # INFOログをdebug.log
#             'level': 'INFO',
#             'class': 'logging.handlers.RotatingFileHandler',
#             'filename': 'debug.log',
#             'maxBytes': 50000,
#             'backupCount':2,
#             'formatter':'standard',
#         },
#         'warning-file': {   # WARNINGログをdebug.log
#             'level': 'WARNING',
#             'class': 'logging.handlers.RotatingFileHandler',
#             'filename': 'debug.log',
#             'maxBytes': 50000,
#             'backupCount':2,
#             'formatter':'standard',
#         },
#         'error-file': {   # ERRORログをdebug.log
#             'level': 'ERROR',
#             'class': 'logging.handlers.RotatingFileHandler',
#             'filename': 'debug.log',
#             'maxBytes': 50000,
#             'backupCount':2,
#             'formatter':'standard',
#         },
#         'sql-file': {   # SQLログをdebug.log
#             'level': 'DEBUG',
#             'class': 'logging.handlers.RotatingFileHandler',
#             'filename': 'debug.log',
#         },
#         'info-console': {   # INFOログをコンソール
#             'level': 'INFO',
#             'class': 'logging.StreamHandler',
#             'formatter':'standard',
#         },
#         'warning-console': {   # WARNINGログをコンソール
#             'level': 'WARNING',
#             'class': 'logging.StreamHandler',
#             'formatter':'standard',
#         },
#         'error-console': {   # ERRORログをコンソール
#             'level': 'ERROR',
#             'class': 'logging.StreamHandler',
#             'formatter':'standard',
#         },
#         'sql-console': {   # SQLログをコンソール
#             'level': 'DEBUG',
#             'class': 'logging.StreamHandler',
#         },
#     },
#     'loggers': {
#         'django': {
#             'handlers': ['info-file','warning-file','error-file','info-console','warning-console','error-console',],
#             'level': 'DEBUG',
#             'propagate': False,
#         },
#         'django.db.backends': {
#             'handlers': ['sql-console',],
#             'level': 'DEBUG',
#             'propagate': False,
#             # https://stackoverflow.com/questions/52809770/django-logging-how-to-remove-sql-query-in-logging-file
#         },
#     },
# }

LOGGING = {
    # https://marsquai.com/745ca65e-e38b-4a8e-8d59-55421be50f7e/05f253f8-c11b-4c91-8091-989eb2600a7b/b2deae90-5afc-4bcf-9159-722dfd1aadec/
    # https://qiita.com/thim/items/4fe17c427e6f917248f4
    'version': 1,
    'disable_existing_loggers': False,
    'formatters':{
        'debugger':{
            'format' : "★★★ DEBUG LOG ★★★ [%(asctime)s] %(levelname)s [%(name)s:%(lineno)s] %(message)s",
            'datefmt' : "%d/%b/%Y %H:%M:%S"
        },
    },
    'handlers': {
        'info-debugger': {   # INFOログをコンソール
            'level': 'INFO',
            'class': 'logging.StreamHandler',
            'formatter':'debugger',
        },
        'error-debugger': {   # INFOログをコンソール
            'level': 'ERROR',
            'class': 'logging.StreamHandler',
            'formatter':'debugger',
        },
        'sql-debugger': {   # SQLログをコンソール
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['info-debugger','error-debugger',],
            'level': 'DEBUG',
            'propagate': False,
        },
        'django.db.backends': {
            'handlers': ['sql-debugger',],
            'level': 'DEBUG',
            'propagate': False,
            # https://stackoverflow.com/questions/52809770/django-logging-how-to-remove-sql-query-in-logging-file
        },
    },
}

# Logs
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions', 
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'accounts.apps.AccountsConfig',
    # 'accounts',
    'seats.apps.SeatsConfig',
    # 'seats',
    'django_bootstrap5',
    'import_export',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'zaseki.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # 'DIRS': [],
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',
            ],
        },
    },
]

WSGI_APPLICATION = 'zaseki.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'zaseki_db',
        'USER': 'vagrant',
        'PASSWORD': 'vagrant',
        'HOST': 'zaseki-db',
        'PORT': '',
    }
}


# Application definition
AUTH_USER_MODEL = 'accounts.User'
# LOGIN_URL = '/accounts/login/'
LOGIN_URL = '/'
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = LOGIN_URL


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'ja'

TIME_ZONE = 'Asia/Tokyo'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# IMAGE_URL = '/images/'
# IMAGE_ROOT = os.path.join(BASE_DIR, 'images')

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
